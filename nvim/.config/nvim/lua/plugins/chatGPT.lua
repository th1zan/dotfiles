return { -- Lazy
  {
    "jackMort/ChatGPT.nvim",
    event = "VeryLazy",
    config = function()
      require("chatgpt").setup({
        -- api_key_cmd = "gpg --decrypt /Users/thibault/dotfiles/scripts/openAIkey_macbook.txt.gpg",
        api_key_cmd = "cat /Users/thibault/scripts/sync-setup/openAIkey_macbook.txt",
        popup_layout = {
          default = "right",
          center = {
            width = "80%",
            height = "80%",
          },
          right = {
            width = "40%",
            width_settings_open = "50%",
          },
        },
        openai_params = {
          model = "gpt-4o-mini",
          frequency_penalty = 0,
          presence_penalty = 0,
          max_tokens = 3000,
          temperature = 0,
          top_p = 1,
          n = 1,
        },
        openai_edit_params = {
          model = "gpt-4o-mini",
          frequency_penalty = 0,
          presence_penalty = 0,
          temperature = 0,
          top_p = 1,
          n = 1,
        },
        use_openai_functions_for_edits = false,
        ignore_default_actions_path = false,
        actions_paths = {},
        show_quickfixes_cmd = default_quickfix_cmd(),
        predefined_chat_gpt_prompts = "https://raw.githubusercontent.com/f/awesome-chatgpt-prompts/main/prompts.csv",
        highlights = {
          help_key = "@symbol",
          help_description = "@comment",
          params_value = "Identifier",
          input_title = "FloatBorder",
          active_session = "ErrorMsg",
          code_edit_result_title = "FloatBorder",
        },
        edit_with_instructions = {
          diff = false,
          keymaps = {
            close = "<C-c>",
            close_n = "<Esc>",
            accept = "<C-y>",
            yank = "<C-u>",
            toggle_diff = "<C-d>",
            toggle_settings = "<C-o>",
            toggle_help = "<C-h>",
            cycle_windows = "<Tab>",
            use_output_as_input = "<C-i>",
          },
        },
        keymaps = {
          close = "<C-c>",
          close_n = "<Esc>",
          yank_last = "<C-y>",
          yank_last_code = "<C-k>",
          scroll_up = "<C-u>",
          scroll_down = "<C-d>",
          new_session = "<C-n>",
          cycle_windows = "<Tab>",
          cycle_modes = "<C-f>",
          next_message = "<C-j>",
          prev_message = "<C-k>",
          select_session = "<Space>",
          rename_session = "r",
          delete_session = "d",
          draft_message = "<C-r>",
          edit_message = "e",
          delete_message = "d",
          toggle_settings = "<C-o>",
          toggle_sessions = "<C-p>",
          toggle_help = "<C-h>",
          toggle_message_role = "<C-r>",
          toggle_system_role_open = "<C-s>",
          stop_generating = "<C-x>",
        },
      })
    end,
    dependencies = {
      "MunifTanjim/nui.nvim",
      "nvim-lua/plenary.nvim",
      "folke/trouble.nvim", -- optional
      "nvim-telescope/telescope.nvim",
    },
  },
}
